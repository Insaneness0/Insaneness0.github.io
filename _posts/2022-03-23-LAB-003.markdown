---
layout: post
title: Insaneness 2
date: 2022-03-23 13:32:29 +0900
---

# Third Time
## 분할 정복 알고리즘
* 주어진 문제의 입력을 분할하여 문제를 해결하는 알고리즘
## 시간복잡도
1. 숫자의 비교 횟수로 나타낸다.
2. 비교 횟수 계산 시 수행 순서는 무시한다.
### 합병 정렬
* 입력이 2개의 부분문제로 분할되고 부분문제의 크기가 1/2로 감소하는 알고리즘
* 총 비교 횟수는 각각의 합병에 대해서 몇 번의 비교가 수행되었는지를 계산하여 합한 수이다.
* 합병 정렬의 시간 복잡도
$$
   (층수) * O(n)=O(n) * log_2n = O(nlogn)
$$
### 퀵 정렬
* 문제를 2개의 부분문제로 분학 시 각 부분문제의 크기가 일정하지 않은 형태의 알고리즘
* 피봇이라는 원소를 기준으로 작은 숫자는 왼쪾 큰 숫자는 오른쪽으로 분할한다. 
* 퀵 정렬의 시간 복잡도(최악과 최선)
$$
최악: n(n-1)/2=O(n^2)  
$$
$$
최선: O(nlog_2n) 
$$
#### 피봇 선정 방법
1. 랜덤하게 선정하는 방법
2. 3 숫자의 중앙갑으로 선정하는 방법
3. 중앙값들 중의 중앙값 
